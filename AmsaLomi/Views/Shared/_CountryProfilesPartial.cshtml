@model IEnumerable<AmsaLomi.Models.CountryProfile>
@using PagedList.Mvc;

@{ 
    string parent = "index";
    object obj = null;
    bool success = ViewData.TryGetValue("parent", out obj);
    if (success && obj != null)
    {
        parent = obj.ToString();
    }

    string parentDivId = "";
    success = ViewData.TryGetValue("parentDivId", out obj);
    if (success && obj != null)
    {
        parentDivId = obj.ToString();
    }

    int id = 0;
    obj = null;
    success = ViewData.TryGetValue("parentId", out obj);
    if (success && obj != null)
    {
        id = int.Parse(obj.ToString());
    }

    string returnUrl = "";
    success = ViewData.TryGetValue("returnUrl", out obj);
    if (success && obj != null)
    {
        returnUrl = obj.ToString();
    }

    string searchString = "";
    success = ViewData.TryGetValue("searchString", out obj);
    if (success && obj != null)
    {
        searchString = obj.ToString();
    }

    int pageNumber = 1;
    success = ViewData.TryGetValue("pageNumber", out obj);
    if (success && obj != null)
    {
        pageNumber = int.Parse(obj.ToString());
    }

    int pageSize = 20;
    success = ViewData.TryGetValue("pageSize", out obj);
    if (success && obj != null)
    {
        pageSize = int.Parse(obj.ToString());
    }

    PagedListRenderOptions options = PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.PageNumbersOnly, new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "Get",
        UpdateTargetId = "pagerContainer" + parentDivId
    });
}
@* ---------------Create New and Search------------------*@
@{
    ViewDataDictionary dict = new ViewDataDictionary();
    dict.Add("modelName", "Issues");
    dict.Add("parent", parent);
    dict.Add("parentDivId", parentDivId);
    dict.Add("returnUrl", returnUrl);
    dict.Add("pageNumber", pageNumber);
    dict.Add("parentId", id);
    dict.Add("showNewButton", false);
}
@Html.Partial("_AddAndSearchPartial", null, dict)

@* -----------------Add Pager Here --------------------- *@
@if (parent == "index")
{
    <div class="text-right">
        @Html.PagedListPager((PagedList.IPagedList)Model, page => Url.Action("Index", "CountryProfiles", new { page, size = pageSize, searchString = searchString }), PagedListRenderOptions.PageNumbersOnly)
    </div>
}

<table class="table flat">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <a href="@Url.Action("Edit", "CountryProfiles", new { id = item.Id, returnUrl = HttpContext.Current.Request.RawUrl })" class="btn-sm btn-warning"><span class="glyphicon glyphicon-edit"></span></a>
                <a href="@Url.Action("Details", "CountryProfiles", new { id = item.Id, returnUrl = HttpContext.Current.Request.RawUrl })" class="btn-sm btn-primary"><span class="glyphicon glyphicon-list"></span></a>
                <a href="@Url.Action("Delete", "CountryProfiles", new { id = item.Id, returnUrl = HttpContext.Current.Request.RawUrl })" class="btn-sm btn-danger"><span class="glyphicon glyphicon-remove"></span></a>
            </td>
        </tr>
    }

</table>

